syntax = "proto2";

package libcore;
option go_package = "grpc_server/gen";
option optimize_for = LITE_RUNTIME;

service LibcoreService {
  rpc Exit(EmptyReq) returns (EmptyResp);
  //
  rpc Start(LoadConfigReq) returns (ErrorResp);
  rpc Stop(EmptyReq) returns (ErrorResp);
  rpc CheckConfig(LoadConfigReq) returns (ErrorResp);
  rpc Test(TestReq) returns (TestResp);
  rpc StopTest(EmptyReq) returns (EmptyResp);
  rpc QueryURLTest(EmptyReq) returns (QueryURLTestResponse);
  rpc QueryStats(EmptyReq) returns (QueryStatsResp);
  rpc ListConnections(EmptyReq) returns (ListConnectionsResp);
  //
  rpc GetGeoIPList(GeoListRequest) returns (GetGeoIPListResponse);
  rpc GetGeoSiteList(GeoListRequest) returns (GetGeoSiteListResponse);
  rpc CompileGeoIPToSrs(CompileGeoIPToSrsRequest) returns (EmptyResp);
  rpc CompileGeoSiteToSrs(CompileGeoSiteToSrsRequest) returns (EmptyResp);
  //
  rpc SetSystemDNS(SetSystemDNSRequest) returns (EmptyResp);
  //
  rpc IsPrivileged(EmptyReq) returns (IsPrivilegedResponse);
  //
  rpc SpeedTest(SpeedTestRequest) returns(SpeedTestResponse);
  rpc QuerySpeedTest(EmptyReq) returns(QuerySpeedTestResponse);
}

message EmptyReq {}

message EmptyResp {}

message ErrorResp {
  optional string error = 1 [default = ""];
}

message LoadConfigReq {
  required string core_config = 1;
  required bool disable_stats = 2;
  optional bool need_extra_process = 3 [default = false];
  optional string extra_process_path = 4 [default = ""];
  optional string extra_process_args = 5 [default = ""];
  optional string extra_process_conf = 6 [default = ""];
  optional string extra_process_conf_dir = 7 [default = ""];
  optional bool extra_no_out = 8 [default = false];
}

message URLTestResp {
  required string outbound_tag = 1;
  required int32 latency_ms = 2;
  required string error = 3;
}

message TestReq {
  required string config = 1;
  repeated string outbound_tags = 2;
  required bool use_default_outbound = 3;
  required string url = 4;
  required bool test_current = 5;
  required int32 max_concurrency = 6;
}

message TestResp {
  repeated URLTestResp results = 1;
}

message QueryStatsResp{
  map<string, int64> ups = 1;
  map<string, int64> downs = 2;
}

message ListConnectionsResp {
  repeated ConnectionMetaData connections = 1;
}

message ConnectionMetaData {
  required string id = 1;
  required int64 created_at = 2;
  required int64 upload = 3;
  required int64 download = 4;
  required string outbound = 5;
  required string network = 6;
  required string dest = 7;
  required string protocol = 8;
  required string domain = 9;
  required string process = 10;
}

message GetGeoIPListResponse {
  repeated string items = 1;
}

message GetGeoSiteListResponse {
  repeated string items = 2;
}

message GeoListRequest {
  required string path = 1;
}

message CompileGeoIPToSrsRequest {
  required string item = 1;
  required string path = 2;
}

message CompileGeoSiteToSrsRequest {
  required string item = 1;
  required string path = 2;
}

message SetSystemDNSRequest {
  required bool clear = 1;
}

message IsPrivilegedResponse {
  required bool has_privilege = 1;
}

message SpeedTestRequest {
  required string config = 1;
  repeated string outbound_tags = 2;
  required bool test_current = 3;
  required bool use_default_outbound = 4;
  required bool test_download = 5;
  required bool test_upload = 6;
  required bool simple_download = 7;
  required string simple_download_addr = 8;
}

message SpeedTestResult {
  required string dl_speed = 1;
  required string ul_speed = 2;
  required int32 latency = 3;
  required string outbound_tag = 4;
  required string error = 5;
  required string server_name = 6;
  required string server_country = 7;
  required bool cancelled = 8;
}

message SpeedTestResponse {
  repeated SpeedTestResult results = 1;
}

message QuerySpeedTestResponse {
  required SpeedTestResult result = 1;
  required bool is_running = 2;
}

message QueryURLTestResponse {
  repeated URLTestResp results = 1;
}